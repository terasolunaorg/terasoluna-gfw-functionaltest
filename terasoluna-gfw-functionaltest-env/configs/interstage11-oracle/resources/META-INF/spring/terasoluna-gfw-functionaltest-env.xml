<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <bean id="dateFactory" class="org.terasoluna.gfw.common.date.jodatime.DefaultJodaTimeDateFactory" />

    <jee:jndi-lookup id="realDataSource" jndi-name="jdbc/gfwFunctionaltestDataSource"
        expected-type="javax.sql.DataSource" />

    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg index="0" ref="realDataSource" />
    </bean>

    <!-- to be modified for oracle -->
    <bean id="integerSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.Integer" />
        <property name="nextValueQuery" value="SELECT INTEGER_SEQ.nextval AS seq FROM DUAL" />
        <property name="currentValueQuery" value="SELECT INTEGER_SEQ.currval AS seq FROM DUAL" />
    </bean>

    <bean id="longSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.Long" />
        <property name="nextValueQuery" value="SELECT LONG_SEQ.nextval AS seq FROM DUAL" />
        <property name="currentValueQuery" value="SELECT LONG_SEQ.currval AS seq FROM DUAL" />
    </bean>

    <bean id="bigIntegerSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.math.BigInteger" />
        <property name="nextValueQuery"
            value="SELECT BIG_INTEGER_SEQ.nextval AS seq FROM DUAL" />
        <property name="currentValueQuery"
            value="SELECT BIG_INTEGER_SEQ.currval AS seq FROM DUAL" />
    </bean>

    <bean id="stringSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.String" />
        <property name="nextValueQuery"
            value="SELECT LPAD(STRING_SEQ.nextval, 10, '0') AS seq FROM DUAL" />
        <property name="currentValueQuery"
            value="SELECT LPAD(STRING_SEQ.currval, 10, '0') AS seq FROM DUAL" />
    </bean>

    <bean id="notFoundSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.Integer" />
        <property name="nextValueQuery" value="SELECT NOT_FOUND_SEQ.nextval AS seq FROM DUAL" />
        <property name="currentValueQuery" value="SELECT NOT_FOUND_SEQ.currval AS seq FROM DUAL" />
    </bean>
    
    <bean id="dataSourceTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        id="entityManagerFactory" parent="abstractEntityManagerFactory">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Settings for DbAppender of logback. -->
    <bean id="realDataSourceForLogging" class="org.apache.commons.dbcp2.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url"
            value="jdbc:h2:mem:terasoluna-gfw-functionaltest;DB_CLOSE_DELAY=-1" />
        <property name="username" value="sa" />
        <property name="password" value="" />
        <property name="defaultAutoCommit" value="false" />
    </bean>

    <bean id="dataSourceForLogging" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg index="0"
            ref="realDataSourceForLogging" />
    </bean>

    <bean id="dbLogCleaner"
        class="org.terasoluna.gfw.functionaltest.domain.DBLogCleaner">
        <property name="dataSource" ref="dataSourceForLogging" />
    </bean>

    <task:scheduler id="dbLogCleanupTaskScheduler" />
    <task:scheduled-tasks scheduler="dbLogCleanupTaskScheduler">
        <task:scheduled ref="dbLogCleaner" method="cleanup"
            cron="0 0 6 * * ?" />
    </task:scheduled-tasks>

</beans>
